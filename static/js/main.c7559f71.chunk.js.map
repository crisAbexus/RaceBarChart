{"version":3,"sources":["functions/rank.js","functions/keyframes.js","App.js","serviceWorker.js","index.js"],"names":["rank","value","names","n","console","log","data","Array","from","name","sort","a","b","d3","i","length","Math","min","keyframes","datevalues","k","ka","kb","t","push","Date","get","svg","ticker","axis","bars","labels","textTween","this","textContent","formatNumber","label","append","style","attr","selectAll","transition","slice","d","join","enter","x","prev","y","bandwidth","text","call","update","exit","remove","next","g","select","tween","bar","color","margin","top","ticks","width","tickSizeOuter","tickSizeInner","barSize","padding","_","now","formatDate","nkeyframes","date","end","then","duration","right","bottom","left","d3array","map","Set","scale","some","undefined","category","categoryByName","Map","domain","values","nameframes","flatMap","rangeRound","height","updateBars","updateAxis","updateLabels","updateTicker","keyframe","ease","App","useState","setData","useEffect","csv","forEach","idx","autoType","loadData","svgRef","useD3","anchor","drawRace","className","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7559f71.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nexport default function rank(value, names, n) {\n  console.log('rank.js - value:');\n  console.log(value);\n  console.log('rank.js - names:');\n  console.log(names);\n  console.log('rank.js - n:');\n  console.log(n);\n  const data = Array.from(names, name => ({name, value: value(name)}));\n  data.sort((a, b) => d3.descending(a.value, b.value));\n  for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n  return data;\n}","import * as d3 from 'd3';\nimport rank from \"./rank\";\n\nexport default function keyframes (datevalues, k, names, n) {\n  const keyframes = [];\n  let ka, a, kb, b;\n  for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\n    for (let i = 0; i < k; ++i) {\n      const t = i / k;\n      keyframes.push([\n        new Date(ka * (1 - t) + kb * t),\n        rank(name => (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t, names, n)\n      ]);\n    }\n  }\n  keyframes.push([new Date(kb), rank(name => b.get(name) || 0,names, n)]);\n  return keyframes;\n};","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport * as d3array from 'd3-array';\nimport { useD3 } from 'd3blackbox';\nimport keyframes from \"./functions/keyframes\";\n\n\nasync function drawRace(svg, data) {\n  const width = 954;\n  const barSize = 48;\n  const duration = 250;\n  const margin = ({ top: 16, right: 6, bottom: 6, left: 0 });\n  const n = 12;\n\n  const datevalues = Array.from(d3array.rollup(data, ([d]) => d.value, d => +d.date, d => d.name))\n    .map(([date, data]) => [new Date(date), data])\n    .sort(([a], [b]) => d3.ascending(a, b))\n\n  const k = 10;\n\n  const names = new Set(data.map(d => d.name));\n\n  const nkeyframes = keyframes(datevalues, k, names, n);\n\n  function ticker(svg) {\n\n\n    const now = svg.append(\"text\")\n      .style(\"font\", `bold ${barSize}px var(--sans-serif)`)\n      .style(\"font-variant-numeric\", \"tabular-nums\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width - 6)\n      .attr(\"y\", margin.top + barSize * (n - 0.45))\n      .attr(\"dy\", \"0.32em\")\n      .text(formatDate(nkeyframes[0][0]));\n\n    return ([date], transition) => {\n      transition.end().then(() => now.text(formatDate(date)));\n    };\n  }\n\n  const formatDate = d3.utcFormat(\"%Y\");\n\n  function axis(svg) {\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${margin.top})`);\n\n    const axis = d3.axisTop(x)\n      .ticks(width / 160)\n      .tickSizeOuter(0)\n      .tickSizeInner(-barSize * (n + y.padding()));\n\n    return (_, transition) => {\n      g.transition(transition).call(axis);\n      g.select(\".tick:first-of-type text\").remove();\n      g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"white\");\n      g.select(\".domain\").remove();\n    };\n  }\n\n  const color = () => {\n    const scale = d3.scaleOrdinal(d3.schemeTableau10);\n    if (data.some(d => d.category !== undefined)) {\n      const categoryByName = new Map(data.map(d => [d.name, d.category]))\n      scale.domain(Array.from(categoryByName.values()));\n      return d => scale(categoryByName.get(d.name));\n    }\n    return d => scale(d.name);\n  }\n\n  const nameframes = d3array.groups(nkeyframes.flatMap(([, data]) => data), d => d.name);\n\n  const prev = new Map(nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])));\n\n  const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)));\n\n  const formatNumber = d3.format(\",d\")\n\n  function bars(svg) {\n    let bar = svg.append(\"g\")\n      .attr(\"fill-opacity\", 0.6)\n      .selectAll(\"rect\");\n\n    return ([date, data], transition) => bar = bar\n      .data(data.slice(0, n), d => d.name)\n      .join(\n        enter => enter.append(\"rect\")\n          .attr(\"fill\", color())\n          .attr(\"height\", y.bandwidth())\n          .attr(\"x\", x(0))\n          .attr(\"y\", d => y((prev.get(d) || d).rank))\n          .attr(\"width\", d => x((prev.get(d) || d).value) - x(0)),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .attr(\"y\", d => y((next.get(d) || d).rank))\n          .attr(\"width\", d => x((next.get(d) || d).value) - x(0))\n      )\n      .call(bar => bar.transition(transition)\n        .attr(\"y\", d => y(d.rank))\n        .attr(\"width\", d => x(d.value) - x(0)));\n  }\n\n  function labels(svg) {\n    let label = svg.append(\"g\")\n      .style(\"font\", \"bold 12px var(--sans-serif)\")\n      .style(\"font-variant-numeric\", \"tabular-nums\")\n      .attr(\"text-anchor\", \"end\")\n      .selectAll(\"text\");\n\n    return ([date, data], transition) => label = label\n      .data(data.slice(0, n), d => d.name)\n      .join(\n        enter => enter.append(\"text\")\n          .attr(\"transform\", d => `translate(${x((prev.get(d) || d).value)},${y((prev.get(d) || d).rank)})`)\n          .attr(\"y\", y.bandwidth() / 2)\n          .attr(\"x\", -6)\n          .attr(\"dy\", \"-0.25em\")\n          .text(d => d.name)\n          .call(text => text.append(\"tspan\")\n            .attr(\"fill-opacity\", 0.7)\n            .attr(\"font-weight\", \"normal\")\n            .attr(\"x\", -6)\n            .attr(\"dy\", \"1.15em\")),\n        update => update,\n        exit => exit.transition(transition).remove()\n          .attr(\"transform\", d => `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`)\n          .call(g => g.select(\"tspan\").tween(\"text\", d => textTween(d.value, (next.get(d) || d).value)))\n      )\n      .call(bar => bar.transition(transition)\n        .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)\n        .call(g => g.select(\"tspan\").tween(\"text\", d => textTween((prev.get(d) || d).value, d.value))))\n  }\n\n  function textTween(a, b) {\n    const i = d3.interpolateNumber(a, b);\n    return function (t) {\n      this.textContent = formatNumber(i(t));\n    };\n  }\n\n  const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right])\n  const y = d3.scaleBand().domain(d3.range(n + 1))\n    .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\n    .padding(0.1)\n\n  const height = margin.top + barSize * n + margin.bottom\n  \n  console.log('App.js - height:');\n  console.log(height);\n\n  svg.attr(\"viewBox\", [0, 150, width, height]);\n\n  const updateBars = bars(svg);\n  const updateAxis = axis(svg);\n  const updateLabels = labels(svg);\n  const updateTicker = ticker(svg);\n\n\n\n  for (const keyframe of nkeyframes) {\n    const transition = svg.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n\n    // Extract the top bar’s value.\n    x.domain([0, keyframe[1][0].value]);\n\n    updateAxis(keyframe, transition);\n    updateBars(keyframe, transition);\n    updateLabels(keyframe, transition);\n    updateTicker(keyframe, transition);\n\n    await transition.end();\n  }\n}\n\nexport default function App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    async function loadData() {\n      const csv = await d3.csv('category-brands.csv')\n      let data = csv\n      csv.forEach((d, idx) => {\n        let date = new Date(d.date);\n        const autoType = d3.autoType(date);\n        data[idx].date = autoType\n\n      })\n      setData(data)\n    }\n    loadData();\n\n  }, []);\n\n  const svgRef = useD3(anchor => {\n    if (data !== null) {\n      drawRace(d3.select(anchor), data)\n    }\n  });\n  return (\n    <div className=\"App\">\n      <svg width='1024' height='1024' ref={svgRef} />\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}